{"version":3,"sources":["components/Note.js","NoteApp2.js","index.js"],"names":["Note","note","content","NoteApp2","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","notesToShow","filter","important","useEffect","console","log","axios","get","then","response","data","length","style","color","onClick","map","id","onSubmit","event","preventDefault","new_note","date","Date","now","toString","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8LAQeA,EANF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,6BAAKA,EAAKC,WC0DCC,EA1DE,WACf,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAcF,EACZJ,EACAA,EAAMO,QAAO,SAAAX,GAAI,OAAuB,IAAnBA,EAAKY,aA8BlC,OAXAC,qBAAU,WACRC,QAAQC,IAAI,UACZC,IACGC,IAAI,cACJC,MAAK,SAAAC,GACJL,QAAQC,IAAI,qBACZV,EAASc,EAASC,WAErB,IACHN,QAAQC,IAAI,SAAUX,EAAMiB,OAAQ,SAG9B,gCACE,oBAAIC,MAAO,CAACC,MAAO,OAAnB,mBACA,8BACE,yBAAQC,QAAS,kBAAMf,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGE,EAAYe,KAAI,SAAAzB,GAAI,OACnB,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAK0B,SAGpB,uBAAMC,SArCI,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAW,CACbJ,GAAItB,EAAMiB,OAAS,EACnBpB,QAASK,EACTyB,KAAMC,KAAKC,MAAMC,WACjBtB,WAAW,GAGfP,EAASD,EAAM+B,OAAOL,IACtBvB,EAAW,KA2BT,UACE,uBAAO6B,MAAO9B,EAAS+B,SA1CN,SAACT,GACtBrB,EAAWqB,EAAMU,OAAOF,UA0CpB,wBAAQG,KAAK,SAAb,yBCnDZC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.205c424e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note }) => {\n  return (\n    <li>{note.content}</li>\n  )\n}\n\nexport default Note","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\n\nconst NoteApp2 = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important === true)\n\n    const handleNoteChange = (event) => {\n        setNewNote(event.target.value)\n      }\n\n    const addNote = (event) => {\n        event.preventDefault()\n        const new_note = {\n            id: notes.length + 1,\n            content: newNote,\n            date: Date.now().toString(),\n            important: true\n        }\n\n        setNotes(notes.concat(new_note))\n        setNewNote('')\n    }\n\n  useEffect(() => {\n    console.log('effect')\n    axios\n      .get('/api/notes')\n      .then(response => {\n        console.log('promise fulfilled')\n        setNotes(response.data)\n      })\n  }, [])\n  console.log('render', notes.length, 'notes')\n\n  return (\n        <div>\n          <h2 style={{color: \"red\"}}>Notes</h2>\n          <div>\n            <button onClick={() => setShowAll(!showAll)}>\n              show {showAll ? 'important' : 'all' }\n            </button>\n          </div>\n          <ul>\n            {notesToShow.map(note =>\n              <Note key={note.id} note={note} />\n            )}\n          </ul>\n          <form onSubmit={addNote}>\n            <input value={newNote} onChange={handleNoteChange}/>\n            <button type=\"submit\">save</button>\n          </form>\n        </div>\n      )\n} ;\n\nexport default NoteApp2 ;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport NoteApp2 from './NoteApp2';\n\nReactDOM.render(\n  <NoteApp2 />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}